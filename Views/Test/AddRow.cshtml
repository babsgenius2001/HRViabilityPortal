@model HRViabilityPortal.ViewModels.TestViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Add Row Test";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("AddRow", "Test", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    <!-- BEGIN HIDDEN FIELDS AREA -->
    @Html.HiddenFor(m => m.EventCommand)
    @Html.HiddenFor(m => m.Mode)
    @Html.HiddenFor(m => m.EventArgument)
    <!-- END HIDDEN FIELDS AREA -->
    <!--start Loading panel-->
    <div id="loading" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class=" modal-title">Loading... </h4>
                </div>
                <div class=" modal-body">
                    <div class=" progress progress-striped active">
                        <div class="progress-bar" style="width:100%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--start Loading panel-->
    <div class="content-wrapper">
        <section class="content">
            <!-- ** BEGIN MESSAGE AREA -->
            <!-- ** END MESSAGE AREA -->
            <!-- add new comment to index file -->
            @if (Model.IsRow)
            {

                <div class="container">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="panel panel-color panel-primary">
                                <div class="panel-heading">
                                    <h3 class="panel-title">Step 5 of 5 (Attach All Applicable Documents)</h3>
                                </div>
                                <div class="panel-body">
                                    @*<h4>List of Required Documents Required for Facility</h4>*@
                                    <div class="col-xs-12">
                                        <table class="table" id="mytable">
                                            <tbody>
                                                @*@for (int k = 0; k < Model.DocumentsList.Count; k++)
        {*@
                                                @if (Model.DocumentsList.Count == 1)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DocumentsList.Count == 2)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType2, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument2" name="uploadedDocument2" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DocumentsList.Count == 3)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType2, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument2" name="uploadedDocument2" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType3, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument3" name="uploadedDocument3" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DocumentsList.Count == 4)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType2, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument2" name="uploadedDocument2" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType3, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument3" name="uploadedDocument3" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType4, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument4" name="uploadedDocument4" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DocumentsList.Count == 5)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType2, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument2" name="uploadedDocument2" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType3, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument3" name="uploadedDocument3" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType4, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument4" name="uploadedDocument4" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType5, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument5" name="uploadedDocument5" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DocumentsList.Count == 6)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType1, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument1" name="uploadedDocument1" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType2, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument2" name="uploadedDocument2" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType3, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument3" name="uploadedDocument3" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType4, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument4" name="uploadedDocument4" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType5, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument5" name="uploadedDocument5" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                @Html.DropDownListFor(m => m.FacilityReq.fileContentType6, new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control" })
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-10 inputGroupContainer">
                                                                <input class="form-control required" type="file" id="@Model.uploadedDocument6" name="uploadedDocument6" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                        <br />
                                    </div>
                                    <br />

                                    <br />
                                    <br />
                                </div>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <button id="btnSave"
                                                    class="btn btn-sm btn-primary pull-right"
                                                    data-pdsa-action="step6">
                                                <i class="glyphicon glyphicon-floppy-save"></i>
                                                &nbsp;Submit
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </section>
    </div>

}

@section scripts
    {
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

    <!--Knockout.JS-->
    <script src="http://ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js"></script>

    <script src="~/Content2/assets/plugins/timepicker/bootstrap-timepicker.js"></script>
    <script src="~/Content2/assets/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <script src="~/Content2/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Content2/assets/plugins/bootstrap-maxlength/bootstrap-maxlength.min.js" type="text/javascript"></script>
    <script src="~/Content2/assets/plugins/bootstrap-touchspin/js/jquery.bootstrap-touchspin.min.js" type="text/javascript"></script>

    <script src="~/Content2/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.bootstrap.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.buttons.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/buttons.bootstrap.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/jszip.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/pdfmake.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/vfs_fonts.js"></script>
    <script src="~/Content2/assets/plugins/datatables/buttons.html5.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/buttons.print.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.keyTable.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/responsive.bootstrap.min.js"></script>
    <script src="~/Content2/assets/plugins/datatables/dataTables.scroller.min.js"></script>

    <script src="~/Content2/assets/js/jquery.nicescroll.js"></script>
    <script src="~/Content2/assets/js/jquery.scrollTo.min.js"></script>

    <!-- Dropzone js -->
    <script src="~/Content2/assets/plugins/dropzone/dist/dropzone.js"></script>

    <!-- Bootstrap File Style -->
    <script src="~/Content2/assets/plugins/bootstrap-filestyle/js/bootstrap-filestyle.min.js" type="text/javascript"></script>

    <script src="~/Content2/assets/js/app.js"></script>

    <script>
        $(document).ready(function () {
            $(document).ajaxStart(function () {
                $("#loading").show();
            });
            $(document).ajaxStop(function () {
                $("#loading").hide();
            });

            $("[data-pdsa-action]").on("click", function (e) {
                $("#loading").show();
                e.preventDefault();

                $("#EventCommand").val(
                    $(this).data("pdsa-action"));

                $("#EventArgument").val(
                    $(this).attr("data-pdsa-val"));

                $("form").submit();
                $.ajax({
                    type: frm.attr('method'),
                    url: frm.attr('action'),
                    data: frm.serialize(),
                    success: function (data) {
                        console.log('Submission was successful.');
                        console.log(data);
                    },
                    error: function (data) {
                        console.log('An error occurred.');
                        console.log(data);
                    },
                });
                $("#loading").hide();
            });
        });
    </script>

    <script>
        jQuery(document).ready(function () {
            var id = 0;
            jQuery("#addrow").click(function () {
                id++;
                var row = jQuery('.samplerow tr').clone(true);

                row.appendTo('#dynamicTable1');
                return false;
            });

            $('.remove').on("click", function () {
                $(this).parents(".samplerow tr").remove();
                ìd--;
            });
        });

        var insert = function () {
            $("#fullrow").each(function () {
                $.ajax({
                    url: '/bulkadd/Index',
                    type: "POST",
                    data: {
                        UserID: $("#txtuserid").text(),
                        Username: $("#txtuname").val(),
                        Password: $("#txtpass").val(),
                        ConfirmPassword: $("#txtcpass").val(),
                        FullName: $("#txtfullname").val(),
                        EmailID: $("#txtemail").val(),
                    },
                    success: function (data) {
                        //  getalllist();
                    },
                    error: function (data) {
                        alert("Error in creating new User");
                    }
                });

            });
        }
    </script>

    <script type="text/javascript">
        $("body").on("click", "#btnAdd", function () {
            //Reference the Name and Country TextBoxes.
            var txtName = $("#txtName");
            var txtCountry = $("#txtCountry");

            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblCustomers > TBODY")[0];

            //Add Row.
            var row = tBody.insertRow(-1);

            //Add Name cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtName.val());

            //Add Country cell.
            cell = $(row.insertCell(-1));
            cell.html(txtCountry.val());

            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input />");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "Remove(this);");
            btnRemove.val("Remove");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            txtName.val("");
            txtCountry.val("");
        });

        function Remove(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblCustomers")[0];

                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };

        $("body").on("click", "#btnSave", function () {
            //Loop through the Table rows and build a JSON array.
            var customers = new Array();
            $("#tblCustomers TBODY TR").each(function () {
                var row = $(this);
                var customer = {};
                customer.Name = row.find("TD").eq(0).html();
                customer.Country = row.find("TD").eq(1).html();
                customers.push(customer);
            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Home/InsertCustomers",
                data: JSON.stringify(customers),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                }
            });
        });
    </script>

    <script type="text/javascript">
        var counter = 1;
        $(function () {
            $('#AddRow').click(function () {
            $('<tr class="success" id="tablerow' + counter + '"><td>' +
			    '<div class="col-md-10 inputGroupContainer">'+
				'<b>'+
			    '@Html.DropDownList("DocumentNames[' + counter + ']", new SelectList(Model.DocumentsList, "Text", "Value"), new { @class = "form-control"})'+
				'</b>'+
			    '</div>'+
			    '</td>' +
                '<td>' +
                '<div class="col-md-10 inputGroupContainer">'+
                '<input class="form-control required" type="file" name="Attachments[' + counter + ']" />' +
                '</div>'+
				'</td>' +
				'<td>' +
				'<button type="button" class="btn btn-primary waves-effect waves-light" onclick="removeTr(' + counter + ');"> <i class="glyphicon glyphicon-remove"></i>&nbsp;Delete</button>'+
				'</td>' +
				'</tr>').appendTo('#submissionTable');
				counter++;
                return false;
            });
        });
        function removeTr(index) {
            if (counter > 1) {
                $('#tablerow' + index).remove();
                counter--;
            }
            return false;
        }
    </script>

    <!-----Another Implementation 20/11/2019-->
    <SCRIPT language="javascript">
        function addRow(tableID) {

            var table = document.getElementById(tableID);

            var rowCount = table.rows.length;
            var row = table.insertRow(rowCount);

            var colCount = table.rows[0].cells.length;

            for (var i = 0; i < colCount; i++) {

                var newcell = row.insertCell(i);

                newcell.innerHTML = table.rows[0].cells[i].innerHTML;
                //alert(newcell.childNodes);
                switch (newcell.childNodes[0].type) {
                    case "text":
                        newcell.childNodes[0].value = "";
                        break;
                    case "checkbox":
                        newcell.childNodes[0].checked = false;
                        break;
                    case "select-one":
                        newcell.childNodes[0].selectedIndex = 0;
                        break;
                }
            }
        }

        function deleteRow(tableID) {
            try {
                var table = document.getElementById(tableID);
                var rowCount = table.rows.length;

                for (var i = 0; i < rowCount; i++) {
                    var row = table.rows[i];
                    var chkbox = row.cells[0].childNodes[0];
                    if (null != chkbox && true == chkbox.checked) {
                        if (rowCount <= 1) {
                            alert("Cannot delete all the rows.");
                            break;
                        }
                        table.deleteRow(i);
                        rowCount--;
                        i--;
                    }


                }
            } catch (e) {
                alert(e);
            }
        }

    </SCRIPT>

    <script>
        var ViewModel = function () {
            var self = this;
            self.items = ko.observableArray();

            this.data = ko.computed(function () {
                var result = [];
                var result2 = [];
                var documentS = 'Document Type';
                var attachmentS = 'Attachment';

                self.items().forEach(function (i) {
                    result.push(i.documentnames());

                });
                return JSON.stringify(result);
            }, this);

            this.dataT = ko.computed(function () {
                var result2 = [];

                self.items().forEach(function (j) {
                    result2.push(j.attachments());

                });
                //  return result2;
                return JSON.stringify(result2);
            }, this);

        };

        var Item = function (documentnames, attachments) {
            var self = this;
            self.documentnames = ko.observable(documentnames);
            self.attachments = ko.observable(attachments);
            self.hasAddedRow = ko.observable(false);
            self.addRow = function () {
                if (!self.hasAddedRow()) {
                    self.hasAddedRow(true);
                    vm.items.push(new Item('lala', 0));
                }
            };
            self.removeRow = function (data) {
                vm.items.remove(data);
            };
        };

        vm = new ViewModel();
        ko.applyBindings(vm);
        vm.items.push(new Item('first', 0));

    </script>

}