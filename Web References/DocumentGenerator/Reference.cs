//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRViabilityPortal.DocumentGenerator {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocumentGeneratorPortBinding", Namespace="http://controller.hrviability.jaizbank.com/")]
    public partial class DocumentGenerator : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GenerateFacilityReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateApplicationFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSukukFormOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DocumentGenerator() {
            this.Url = global::HRViabilityPortal.Properties.Settings.Default.HRViabilityPortal_DocumentGenerator_DocumentGenerator;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GenerateFacilityReceiptCompletedEventHandler GenerateFacilityReceiptCompleted;
        
        /// <remarks/>
        public event CreateApplicationFormCompletedEventHandler CreateApplicationFormCompleted;
        
        /// <remarks/>
        public event CreateDocumentsCompletedEventHandler CreateDocumentsCompleted;
        
        /// <remarks/>
        public event CreateSukukFormCompletedEventHandler CreateSukukFormCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://controller.hrviability.jaizbank.com/", ResponseNamespace="http://controller.hrviability.jaizbank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentsDetails GenerateFacilityReceipt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenceNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string staffID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nameOfStaff, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string accountNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string department, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string grade, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string facilityType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string amountRequested, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string monthlySalary, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string monthlyRepayment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string downPayment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tenor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dateOfRequest) {
            object[] results = this.Invoke("GenerateFacilityReceipt", new object[] {
                        referenceNo,
                        staffID,
                        nameOfStaff,
                        accountNumber,
                        department,
                        grade,
                        facilityType,
                        amountRequested,
                        monthlySalary,
                        monthlyRepayment,
                        downPayment,
                        rate,
                        tenor,
                        dateOfRequest});
            return ((documentsDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFacilityReceiptAsync(string referenceNo, string staffID, string nameOfStaff, string accountNumber, string department, string grade, string facilityType, string amountRequested, string monthlySalary, string monthlyRepayment, string downPayment, string rate, string tenor, string dateOfRequest) {
            this.GenerateFacilityReceiptAsync(referenceNo, staffID, nameOfStaff, accountNumber, department, grade, facilityType, amountRequested, monthlySalary, monthlyRepayment, downPayment, rate, tenor, dateOfRequest, null);
        }
        
        /// <remarks/>
        public void GenerateFacilityReceiptAsync(string referenceNo, string staffID, string nameOfStaff, string accountNumber, string department, string grade, string facilityType, string amountRequested, string monthlySalary, string monthlyRepayment, string downPayment, string rate, string tenor, string dateOfRequest, object userState) {
            if ((this.GenerateFacilityReceiptOperationCompleted == null)) {
                this.GenerateFacilityReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFacilityReceiptOperationCompleted);
            }
            this.InvokeAsync("GenerateFacilityReceipt", new object[] {
                        referenceNo,
                        staffID,
                        nameOfStaff,
                        accountNumber,
                        department,
                        grade,
                        facilityType,
                        amountRequested,
                        monthlySalary,
                        monthlyRepayment,
                        downPayment,
                        rate,
                        tenor,
                        dateOfRequest}, this.GenerateFacilityReceiptOperationCompleted, userState);
        }
        
        private void OnGenerateFacilityReceiptOperationCompleted(object arg) {
            if ((this.GenerateFacilityReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFacilityReceiptCompleted(this, new GenerateFacilityReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://controller.hrviability.jaizbank.com/", ResponseNamespace="http://controller.hrviability.jaizbank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentsDetails CreateApplicationForm(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AssetDescriptionMurabaha, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AssetDescriptionBaiMuaajal, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string VendorName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string VendorAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string VendorPhoneNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AssetLocation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string VehicleModel, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string VehicleYear, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeliveryModeMurabaha, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeliveryModeIjara, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TypeOfProperty, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PropertyDescription, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DocumentTitle, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PropertyLocation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeveloperName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeveloperAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeveloperNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ServiceDescription, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ServiceProviderName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ServiceProviderAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ServiceProviderNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InvoiceMurabaha, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InvoiceIjara, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AccountNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string StaffName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string StaffID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NatureOfEmployment, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmployerAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NetMonthlySalary, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AnnualGrossPackage, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FacilityType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateofAssumption, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string JobFunction, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AmountRequested, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DownPayment, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MaritalStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int LengthOfService, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool LengthOfServiceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int Tenor, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool TenorSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string LoanPurpose, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField6, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField7, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField8, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField9, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomField10, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData6, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData7, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData8, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData9, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustomFieldData10, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OtherFacilityName) {
            object[] results = this.Invoke("CreateApplicationForm", new object[] {
                        AssetDescriptionMurabaha,
                        AssetDescriptionBaiMuaajal,
                        VendorName,
                        VendorAddress,
                        VendorPhoneNo,
                        AssetLocation,
                        VehicleModel,
                        VehicleYear,
                        DeliveryModeMurabaha,
                        DeliveryModeIjara,
                        TypeOfProperty,
                        PropertyDescription,
                        DocumentTitle,
                        PropertyLocation,
                        DeveloperName,
                        DeveloperAddress,
                        DeveloperNumber,
                        ServiceDescription,
                        ServiceProviderName,
                        ServiceProviderAddress,
                        ServiceProviderNo,
                        InvoiceMurabaha,
                        InvoiceIjara,
                        AccountNumber,
                        StaffName,
                        StaffID,
                        PhoneNumber,
                        NatureOfEmployment,
                        EmployerAddress,
                        NetMonthlySalary,
                        AnnualGrossPackage,
                        FacilityType,
                        DateofAssumption,
                        DateOfBirth,
                        JobFunction,
                        AmountRequested,
                        DownPayment,
                        MaritalStatus,
                        LengthOfService,
                        LengthOfServiceSpecified,
                        Tenor,
                        TenorSpecified,
                        LoanPurpose,
                        CustomField1,
                        CustomField2,
                        CustomField3,
                        CustomField4,
                        CustomField5,
                        CustomField6,
                        CustomField7,
                        CustomField8,
                        CustomField9,
                        CustomField10,
                        CustomFieldData1,
                        CustomFieldData2,
                        CustomFieldData3,
                        CustomFieldData4,
                        CustomFieldData5,
                        CustomFieldData6,
                        CustomFieldData7,
                        CustomFieldData8,
                        CustomFieldData9,
                        CustomFieldData10,
                        OtherFacilityName});
            return ((documentsDetails)(results[0]));
        }
        
        /// <remarks/>
        public void CreateApplicationFormAsync(
                    string AssetDescriptionMurabaha, 
                    string AssetDescriptionBaiMuaajal, 
                    string VendorName, 
                    string VendorAddress, 
                    string VendorPhoneNo, 
                    string AssetLocation, 
                    string VehicleModel, 
                    string VehicleYear, 
                    string DeliveryModeMurabaha, 
                    string DeliveryModeIjara, 
                    string TypeOfProperty, 
                    string PropertyDescription, 
                    string DocumentTitle, 
                    string PropertyLocation, 
                    string DeveloperName, 
                    string DeveloperAddress, 
                    string DeveloperNumber, 
                    string ServiceDescription, 
                    string ServiceProviderName, 
                    string ServiceProviderAddress, 
                    string ServiceProviderNo, 
                    string InvoiceMurabaha, 
                    string InvoiceIjara, 
                    string AccountNumber, 
                    string StaffName, 
                    string StaffID, 
                    string PhoneNumber, 
                    string NatureOfEmployment, 
                    string EmployerAddress, 
                    string NetMonthlySalary, 
                    string AnnualGrossPackage, 
                    string FacilityType, 
                    string DateofAssumption, 
                    string DateOfBirth, 
                    string JobFunction, 
                    string AmountRequested, 
                    string DownPayment, 
                    string MaritalStatus, 
                    int LengthOfService, 
                    bool LengthOfServiceSpecified, 
                    int Tenor, 
                    bool TenorSpecified, 
                    string LoanPurpose, 
                    string CustomField1, 
                    string CustomField2, 
                    string CustomField3, 
                    string CustomField4, 
                    string CustomField5, 
                    string CustomField6, 
                    string CustomField7, 
                    string CustomField8, 
                    string CustomField9, 
                    string CustomField10, 
                    string CustomFieldData1, 
                    string CustomFieldData2, 
                    string CustomFieldData3, 
                    string CustomFieldData4, 
                    string CustomFieldData5, 
                    string CustomFieldData6, 
                    string CustomFieldData7, 
                    string CustomFieldData8, 
                    string CustomFieldData9, 
                    string CustomFieldData10, 
                    string OtherFacilityName) {
            this.CreateApplicationFormAsync(AssetDescriptionMurabaha, AssetDescriptionBaiMuaajal, VendorName, VendorAddress, VendorPhoneNo, AssetLocation, VehicleModel, VehicleYear, DeliveryModeMurabaha, DeliveryModeIjara, TypeOfProperty, PropertyDescription, DocumentTitle, PropertyLocation, DeveloperName, DeveloperAddress, DeveloperNumber, ServiceDescription, ServiceProviderName, ServiceProviderAddress, ServiceProviderNo, InvoiceMurabaha, InvoiceIjara, AccountNumber, StaffName, StaffID, PhoneNumber, NatureOfEmployment, EmployerAddress, NetMonthlySalary, AnnualGrossPackage, FacilityType, DateofAssumption, DateOfBirth, JobFunction, AmountRequested, DownPayment, MaritalStatus, LengthOfService, LengthOfServiceSpecified, Tenor, TenorSpecified, LoanPurpose, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, CustomFieldData1, CustomFieldData2, CustomFieldData3, CustomFieldData4, CustomFieldData5, CustomFieldData6, CustomFieldData7, CustomFieldData8, CustomFieldData9, CustomFieldData10, OtherFacilityName, null);
        }
        
        /// <remarks/>
        public void CreateApplicationFormAsync(
                    string AssetDescriptionMurabaha, 
                    string AssetDescriptionBaiMuaajal, 
                    string VendorName, 
                    string VendorAddress, 
                    string VendorPhoneNo, 
                    string AssetLocation, 
                    string VehicleModel, 
                    string VehicleYear, 
                    string DeliveryModeMurabaha, 
                    string DeliveryModeIjara, 
                    string TypeOfProperty, 
                    string PropertyDescription, 
                    string DocumentTitle, 
                    string PropertyLocation, 
                    string DeveloperName, 
                    string DeveloperAddress, 
                    string DeveloperNumber, 
                    string ServiceDescription, 
                    string ServiceProviderName, 
                    string ServiceProviderAddress, 
                    string ServiceProviderNo, 
                    string InvoiceMurabaha, 
                    string InvoiceIjara, 
                    string AccountNumber, 
                    string StaffName, 
                    string StaffID, 
                    string PhoneNumber, 
                    string NatureOfEmployment, 
                    string EmployerAddress, 
                    string NetMonthlySalary, 
                    string AnnualGrossPackage, 
                    string FacilityType, 
                    string DateofAssumption, 
                    string DateOfBirth, 
                    string JobFunction, 
                    string AmountRequested, 
                    string DownPayment, 
                    string MaritalStatus, 
                    int LengthOfService, 
                    bool LengthOfServiceSpecified, 
                    int Tenor, 
                    bool TenorSpecified, 
                    string LoanPurpose, 
                    string CustomField1, 
                    string CustomField2, 
                    string CustomField3, 
                    string CustomField4, 
                    string CustomField5, 
                    string CustomField6, 
                    string CustomField7, 
                    string CustomField8, 
                    string CustomField9, 
                    string CustomField10, 
                    string CustomFieldData1, 
                    string CustomFieldData2, 
                    string CustomFieldData3, 
                    string CustomFieldData4, 
                    string CustomFieldData5, 
                    string CustomFieldData6, 
                    string CustomFieldData7, 
                    string CustomFieldData8, 
                    string CustomFieldData9, 
                    string CustomFieldData10, 
                    string OtherFacilityName, 
                    object userState) {
            if ((this.CreateApplicationFormOperationCompleted == null)) {
                this.CreateApplicationFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateApplicationFormOperationCompleted);
            }
            this.InvokeAsync("CreateApplicationForm", new object[] {
                        AssetDescriptionMurabaha,
                        AssetDescriptionBaiMuaajal,
                        VendorName,
                        VendorAddress,
                        VendorPhoneNo,
                        AssetLocation,
                        VehicleModel,
                        VehicleYear,
                        DeliveryModeMurabaha,
                        DeliveryModeIjara,
                        TypeOfProperty,
                        PropertyDescription,
                        DocumentTitle,
                        PropertyLocation,
                        DeveloperName,
                        DeveloperAddress,
                        DeveloperNumber,
                        ServiceDescription,
                        ServiceProviderName,
                        ServiceProviderAddress,
                        ServiceProviderNo,
                        InvoiceMurabaha,
                        InvoiceIjara,
                        AccountNumber,
                        StaffName,
                        StaffID,
                        PhoneNumber,
                        NatureOfEmployment,
                        EmployerAddress,
                        NetMonthlySalary,
                        AnnualGrossPackage,
                        FacilityType,
                        DateofAssumption,
                        DateOfBirth,
                        JobFunction,
                        AmountRequested,
                        DownPayment,
                        MaritalStatus,
                        LengthOfService,
                        LengthOfServiceSpecified,
                        Tenor,
                        TenorSpecified,
                        LoanPurpose,
                        CustomField1,
                        CustomField2,
                        CustomField3,
                        CustomField4,
                        CustomField5,
                        CustomField6,
                        CustomField7,
                        CustomField8,
                        CustomField9,
                        CustomField10,
                        CustomFieldData1,
                        CustomFieldData2,
                        CustomFieldData3,
                        CustomFieldData4,
                        CustomFieldData5,
                        CustomFieldData6,
                        CustomFieldData7,
                        CustomFieldData8,
                        CustomFieldData9,
                        CustomFieldData10,
                        OtherFacilityName}, this.CreateApplicationFormOperationCompleted, userState);
        }
        
        private void OnCreateApplicationFormOperationCompleted(object arg) {
            if ((this.CreateApplicationFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateApplicationFormCompleted(this, new CreateApplicationFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://controller.hrviability.jaizbank.com/", ResponseNamespace="http://controller.hrviability.jaizbank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentsDetails CreateDocuments(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string StaffId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AccountNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string StaffName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NatureOfEmployment, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmployerAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NetMonthlySalary, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AnnualGrossPackage, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FacilityType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateofAssumption, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string JobFunction, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AmountRequested, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DownPayment, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MaritalStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int LengthOfService, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool LengthOfServiceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int Tenor, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool TenorSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string LoanPurpose) {
            object[] results = this.Invoke("CreateDocuments", new object[] {
                        StaffId,
                        PhoneNumber,
                        AccountNumber,
                        StaffName,
                        NatureOfEmployment,
                        EmployerAddress,
                        NetMonthlySalary,
                        AnnualGrossPackage,
                        FacilityType,
                        DateofAssumption,
                        DateOfBirth,
                        JobFunction,
                        AmountRequested,
                        DownPayment,
                        MaritalStatus,
                        LengthOfService,
                        LengthOfServiceSpecified,
                        Tenor,
                        TenorSpecified,
                        LoanPurpose});
            return ((documentsDetails)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentsAsync(
                    string StaffId, 
                    string PhoneNumber, 
                    string AccountNumber, 
                    string StaffName, 
                    string NatureOfEmployment, 
                    string EmployerAddress, 
                    string NetMonthlySalary, 
                    string AnnualGrossPackage, 
                    string FacilityType, 
                    string DateofAssumption, 
                    string DateOfBirth, 
                    string JobFunction, 
                    string AmountRequested, 
                    string DownPayment, 
                    string MaritalStatus, 
                    int LengthOfService, 
                    bool LengthOfServiceSpecified, 
                    int Tenor, 
                    bool TenorSpecified, 
                    string LoanPurpose) {
            this.CreateDocumentsAsync(StaffId, PhoneNumber, AccountNumber, StaffName, NatureOfEmployment, EmployerAddress, NetMonthlySalary, AnnualGrossPackage, FacilityType, DateofAssumption, DateOfBirth, JobFunction, AmountRequested, DownPayment, MaritalStatus, LengthOfService, LengthOfServiceSpecified, Tenor, TenorSpecified, LoanPurpose, null);
        }
        
        /// <remarks/>
        public void CreateDocumentsAsync(
                    string StaffId, 
                    string PhoneNumber, 
                    string AccountNumber, 
                    string StaffName, 
                    string NatureOfEmployment, 
                    string EmployerAddress, 
                    string NetMonthlySalary, 
                    string AnnualGrossPackage, 
                    string FacilityType, 
                    string DateofAssumption, 
                    string DateOfBirth, 
                    string JobFunction, 
                    string AmountRequested, 
                    string DownPayment, 
                    string MaritalStatus, 
                    int LengthOfService, 
                    bool LengthOfServiceSpecified, 
                    int Tenor, 
                    bool TenorSpecified, 
                    string LoanPurpose, 
                    object userState) {
            if ((this.CreateDocumentsOperationCompleted == null)) {
                this.CreateDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentsOperationCompleted);
            }
            this.InvokeAsync("CreateDocuments", new object[] {
                        StaffId,
                        PhoneNumber,
                        AccountNumber,
                        StaffName,
                        NatureOfEmployment,
                        EmployerAddress,
                        NetMonthlySalary,
                        AnnualGrossPackage,
                        FacilityType,
                        DateofAssumption,
                        DateOfBirth,
                        JobFunction,
                        AmountRequested,
                        DownPayment,
                        MaritalStatus,
                        LengthOfService,
                        LengthOfServiceSpecified,
                        Tenor,
                        TenorSpecified,
                        LoanPurpose}, this.CreateDocumentsOperationCompleted, userState);
        }
        
        private void OnCreateDocumentsOperationCompleted(object arg) {
            if ((this.CreateDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentsCompleted(this, new CreateDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://controller.hrviability.jaizbank.com/", ResponseNamespace="http://controller.hrviability.jaizbank.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentsDetails CreateSukukForm(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ReferenceNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ApplicantType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AmountOfSukuk, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AmountInWords, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CustodianAccountNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CSCCAccountNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ClearingHouseNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Title, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Surname, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FirstName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OtherName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Occupation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Address, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdentityNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MaidenName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NextOfKin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankAccountNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BVN, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ResidencyStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InvestorCategory, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TitleJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SurnameJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FirstNameJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OtherNameJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OccupationJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumberJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AddressJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdentityNumberJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateOfBirthJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MaidenNameJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmailAddressJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NextOfKinJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankNameJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankAccountNoJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BVNJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ResidencyStatusJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TitleJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SurnameJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FirstNameJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OtherNameJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OccupationJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumberJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AddressJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdentityNumberJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DateOfBirthJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MaidenNameJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmailAddressJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NextOfKinJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankNameJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankAccountNoJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BVNJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ResidencyStatusJoint2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InvestorCategoryJoint, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CompanyName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BusinessType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RCNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string AddressCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string EmailAddressCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ContactPersonCorpoate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PhoneNumberCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankNameCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BankAccountNoCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BVNCorporate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InvestorCategoryCorporate) {
            object[] results = this.Invoke("CreateSukukForm", new object[] {
                        ReferenceNo,
                        ApplicantType,
                        AmountOfSukuk,
                        AmountInWords,
                        CustodianAccountNo,
                        CSCCAccountNo,
                        ClearingHouseNo,
                        Title,
                        Surname,
                        FirstName,
                        OtherName,
                        Occupation,
                        PhoneNumber,
                        Address,
                        IdentityNumber,
                        DateOfBirth,
                        MaidenName,
                        EmailAddress,
                        NextOfKin,
                        BankName,
                        BankAccountNo,
                        BVN,
                        ResidencyStatus,
                        InvestorCategory,
                        TitleJoint,
                        SurnameJoint,
                        FirstNameJoint,
                        OtherNameJoint,
                        OccupationJoint,
                        PhoneNumberJoint,
                        AddressJoint,
                        IdentityNumberJoint,
                        DateOfBirthJoint,
                        MaidenNameJoint,
                        EmailAddressJoint,
                        NextOfKinJoint,
                        BankNameJoint,
                        BankAccountNoJoint,
                        BVNJoint,
                        ResidencyStatusJoint,
                        TitleJoint2,
                        SurnameJoint2,
                        FirstNameJoint2,
                        OtherNameJoint2,
                        OccupationJoint2,
                        PhoneNumberJoint2,
                        AddressJoint2,
                        IdentityNumberJoint2,
                        DateOfBirthJoint2,
                        MaidenNameJoint2,
                        EmailAddressJoint2,
                        NextOfKinJoint2,
                        BankNameJoint2,
                        BankAccountNoJoint2,
                        BVNJoint2,
                        ResidencyStatusJoint2,
                        InvestorCategoryJoint,
                        CompanyName,
                        BusinessType,
                        RCNumber,
                        AddressCorporate,
                        EmailAddressCorporate,
                        ContactPersonCorpoate,
                        PhoneNumberCorporate,
                        BankNameCorporate,
                        BankAccountNoCorporate,
                        BVNCorporate,
                        InvestorCategoryCorporate});
            return ((documentsDetails)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSukukFormAsync(
                    string ReferenceNo, 
                    string ApplicantType, 
                    string AmountOfSukuk, 
                    string AmountInWords, 
                    string CustodianAccountNo, 
                    string CSCCAccountNo, 
                    string ClearingHouseNo, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    string OtherName, 
                    string Occupation, 
                    string PhoneNumber, 
                    string Address, 
                    string IdentityNumber, 
                    string DateOfBirth, 
                    string MaidenName, 
                    string EmailAddress, 
                    string NextOfKin, 
                    string BankName, 
                    string BankAccountNo, 
                    string BVN, 
                    string ResidencyStatus, 
                    string InvestorCategory, 
                    string TitleJoint, 
                    string SurnameJoint, 
                    string FirstNameJoint, 
                    string OtherNameJoint, 
                    string OccupationJoint, 
                    string PhoneNumberJoint, 
                    string AddressJoint, 
                    string IdentityNumberJoint, 
                    string DateOfBirthJoint, 
                    string MaidenNameJoint, 
                    string EmailAddressJoint, 
                    string NextOfKinJoint, 
                    string BankNameJoint, 
                    string BankAccountNoJoint, 
                    string BVNJoint, 
                    string ResidencyStatusJoint, 
                    string TitleJoint2, 
                    string SurnameJoint2, 
                    string FirstNameJoint2, 
                    string OtherNameJoint2, 
                    string OccupationJoint2, 
                    string PhoneNumberJoint2, 
                    string AddressJoint2, 
                    string IdentityNumberJoint2, 
                    string DateOfBirthJoint2, 
                    string MaidenNameJoint2, 
                    string EmailAddressJoint2, 
                    string NextOfKinJoint2, 
                    string BankNameJoint2, 
                    string BankAccountNoJoint2, 
                    string BVNJoint2, 
                    string ResidencyStatusJoint2, 
                    string InvestorCategoryJoint, 
                    string CompanyName, 
                    string BusinessType, 
                    string RCNumber, 
                    string AddressCorporate, 
                    string EmailAddressCorporate, 
                    string ContactPersonCorpoate, 
                    string PhoneNumberCorporate, 
                    string BankNameCorporate, 
                    string BankAccountNoCorporate, 
                    string BVNCorporate, 
                    string InvestorCategoryCorporate) {
            this.CreateSukukFormAsync(ReferenceNo, ApplicantType, AmountOfSukuk, AmountInWords, CustodianAccountNo, CSCCAccountNo, ClearingHouseNo, Title, Surname, FirstName, OtherName, Occupation, PhoneNumber, Address, IdentityNumber, DateOfBirth, MaidenName, EmailAddress, NextOfKin, BankName, BankAccountNo, BVN, ResidencyStatus, InvestorCategory, TitleJoint, SurnameJoint, FirstNameJoint, OtherNameJoint, OccupationJoint, PhoneNumberJoint, AddressJoint, IdentityNumberJoint, DateOfBirthJoint, MaidenNameJoint, EmailAddressJoint, NextOfKinJoint, BankNameJoint, BankAccountNoJoint, BVNJoint, ResidencyStatusJoint, TitleJoint2, SurnameJoint2, FirstNameJoint2, OtherNameJoint2, OccupationJoint2, PhoneNumberJoint2, AddressJoint2, IdentityNumberJoint2, DateOfBirthJoint2, MaidenNameJoint2, EmailAddressJoint2, NextOfKinJoint2, BankNameJoint2, BankAccountNoJoint2, BVNJoint2, ResidencyStatusJoint2, InvestorCategoryJoint, CompanyName, BusinessType, RCNumber, AddressCorporate, EmailAddressCorporate, ContactPersonCorpoate, PhoneNumberCorporate, BankNameCorporate, BankAccountNoCorporate, BVNCorporate, InvestorCategoryCorporate, null);
        }
        
        /// <remarks/>
        public void CreateSukukFormAsync(
                    string ReferenceNo, 
                    string ApplicantType, 
                    string AmountOfSukuk, 
                    string AmountInWords, 
                    string CustodianAccountNo, 
                    string CSCCAccountNo, 
                    string ClearingHouseNo, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    string OtherName, 
                    string Occupation, 
                    string PhoneNumber, 
                    string Address, 
                    string IdentityNumber, 
                    string DateOfBirth, 
                    string MaidenName, 
                    string EmailAddress, 
                    string NextOfKin, 
                    string BankName, 
                    string BankAccountNo, 
                    string BVN, 
                    string ResidencyStatus, 
                    string InvestorCategory, 
                    string TitleJoint, 
                    string SurnameJoint, 
                    string FirstNameJoint, 
                    string OtherNameJoint, 
                    string OccupationJoint, 
                    string PhoneNumberJoint, 
                    string AddressJoint, 
                    string IdentityNumberJoint, 
                    string DateOfBirthJoint, 
                    string MaidenNameJoint, 
                    string EmailAddressJoint, 
                    string NextOfKinJoint, 
                    string BankNameJoint, 
                    string BankAccountNoJoint, 
                    string BVNJoint, 
                    string ResidencyStatusJoint, 
                    string TitleJoint2, 
                    string SurnameJoint2, 
                    string FirstNameJoint2, 
                    string OtherNameJoint2, 
                    string OccupationJoint2, 
                    string PhoneNumberJoint2, 
                    string AddressJoint2, 
                    string IdentityNumberJoint2, 
                    string DateOfBirthJoint2, 
                    string MaidenNameJoint2, 
                    string EmailAddressJoint2, 
                    string NextOfKinJoint2, 
                    string BankNameJoint2, 
                    string BankAccountNoJoint2, 
                    string BVNJoint2, 
                    string ResidencyStatusJoint2, 
                    string InvestorCategoryJoint, 
                    string CompanyName, 
                    string BusinessType, 
                    string RCNumber, 
                    string AddressCorporate, 
                    string EmailAddressCorporate, 
                    string ContactPersonCorpoate, 
                    string PhoneNumberCorporate, 
                    string BankNameCorporate, 
                    string BankAccountNoCorporate, 
                    string BVNCorporate, 
                    string InvestorCategoryCorporate, 
                    object userState) {
            if ((this.CreateSukukFormOperationCompleted == null)) {
                this.CreateSukukFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSukukFormOperationCompleted);
            }
            this.InvokeAsync("CreateSukukForm", new object[] {
                        ReferenceNo,
                        ApplicantType,
                        AmountOfSukuk,
                        AmountInWords,
                        CustodianAccountNo,
                        CSCCAccountNo,
                        ClearingHouseNo,
                        Title,
                        Surname,
                        FirstName,
                        OtherName,
                        Occupation,
                        PhoneNumber,
                        Address,
                        IdentityNumber,
                        DateOfBirth,
                        MaidenName,
                        EmailAddress,
                        NextOfKin,
                        BankName,
                        BankAccountNo,
                        BVN,
                        ResidencyStatus,
                        InvestorCategory,
                        TitleJoint,
                        SurnameJoint,
                        FirstNameJoint,
                        OtherNameJoint,
                        OccupationJoint,
                        PhoneNumberJoint,
                        AddressJoint,
                        IdentityNumberJoint,
                        DateOfBirthJoint,
                        MaidenNameJoint,
                        EmailAddressJoint,
                        NextOfKinJoint,
                        BankNameJoint,
                        BankAccountNoJoint,
                        BVNJoint,
                        ResidencyStatusJoint,
                        TitleJoint2,
                        SurnameJoint2,
                        FirstNameJoint2,
                        OtherNameJoint2,
                        OccupationJoint2,
                        PhoneNumberJoint2,
                        AddressJoint2,
                        IdentityNumberJoint2,
                        DateOfBirthJoint2,
                        MaidenNameJoint2,
                        EmailAddressJoint2,
                        NextOfKinJoint2,
                        BankNameJoint2,
                        BankAccountNoJoint2,
                        BVNJoint2,
                        ResidencyStatusJoint2,
                        InvestorCategoryJoint,
                        CompanyName,
                        BusinessType,
                        RCNumber,
                        AddressCorporate,
                        EmailAddressCorporate,
                        ContactPersonCorpoate,
                        PhoneNumberCorporate,
                        BankNameCorporate,
                        BankAccountNoCorporate,
                        BVNCorporate,
                        InvestorCategoryCorporate}, this.CreateSukukFormOperationCompleted, userState);
        }
        
        private void OnCreateSukukFormOperationCompleted(object arg) {
            if ((this.CreateSukukFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSukukFormCompleted(this, new CreateSukukFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://controller.hrviability.jaizbank.com/")]
    public partial class documentsDetails {
        
        private string accountNumField;
        
        private decimal annualGrossPackageField;
        
        private bool annualGrossPackageFieldSpecified;
        
        private string dateOfEmploymentField;
        
        private string natureOfEmploymentField;
        
        private decimal netMonthlySalaryField;
        
        private bool netMonthlySalaryFieldSpecified;
        
        private string responseField;
        
        private string responseCodeField;
        
        private string responseMessageField;
        
        private string staffIdField;
        
        private string staffNameField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountNum {
            get {
                return this.accountNumField;
            }
            set {
                this.accountNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal annualGrossPackage {
            get {
                return this.annualGrossPackageField;
            }
            set {
                this.annualGrossPackageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool annualGrossPackageSpecified {
            get {
                return this.annualGrossPackageFieldSpecified;
            }
            set {
                this.annualGrossPackageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateOfEmployment {
            get {
                return this.dateOfEmploymentField;
            }
            set {
                this.dateOfEmploymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string natureOfEmployment {
            get {
                return this.natureOfEmploymentField;
            }
            set {
                this.natureOfEmploymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal netMonthlySalary {
            get {
                return this.netMonthlySalaryField;
            }
            set {
                this.netMonthlySalaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool netMonthlySalarySpecified {
            get {
                return this.netMonthlySalaryFieldSpecified;
            }
            set {
                this.netMonthlySalaryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string responseMessage {
            get {
                return this.responseMessageField;
            }
            set {
                this.responseMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string staffId {
            get {
                return this.staffIdField;
            }
            set {
                this.staffIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string staffName {
            get {
                return this.staffNameField;
            }
            set {
                this.staffNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GenerateFacilityReceiptCompletedEventHandler(object sender, GenerateFacilityReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFacilityReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFacilityReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentsDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentsDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateApplicationFormCompletedEventHandler(object sender, CreateApplicationFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateApplicationFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateApplicationFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentsDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentsDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateDocumentsCompletedEventHandler(object sender, CreateDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentsDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentsDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateSukukFormCompletedEventHandler(object sender, CreateSukukFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSukukFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSukukFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentsDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentsDetails)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591